"use strict";(self.webpackChunknerite_docs=self.webpackChunknerite_docs||[]).push([[8568],{7151:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>h,frontMatter:()=>c,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"technical-documentation/technical-docs-and-code-repository","title":"Technical Docs & Code","description":"Technical documentation and code repository information for developers.","source":"@site/docs/technical-documentation/technical-docs-and-code-repository.md","sourceDirName":"technical-documentation","slug":"/technical-documentation/technical-docs-and-code-repository","permalink":"/docs/technical-documentation/technical-docs-and-code-repository","draft":false,"unlisted":false,"editUrl":"https://github.com/NeriteOrg/neriteorg.github.io/docs/technical-documentation/technical-docs-and-code-repository.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Technical Documentation","permalink":"/docs/category/technical-documentation"},"next":{"title":"Liquity Friendly Fork Program","permalink":"/docs/technical-documentation/friendly-fork-program"}}');var i=t(4848),r=t(8453);const c={sidebar_position:1},a="Technical Docs & Code",s={},d=[{value:"Primary Core Repository",id:"primary-core-repository",level:2},{value:"Tech spec changes on Nerite from Liquity V2",id:"tech-spec-changes-on-nerite-from-liquity-v2",level:2},{value:"Delegation",id:"delegation",level:3},{value:"Superfluid",id:"superfluid",level:3},{value:"More collaterals and debt limits",id:"more-collaterals-and-debt-limits",level:3}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"technical-docs--code",children:"Technical Docs & Code"})}),"\n",(0,i.jsx)(n.p,{children:"Technical documentation and code repository information for developers."}),"\n",(0,i.jsx)(n.h2,{id:"primary-core-repository",children:"Primary Core Repository"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/NeriteOrg/nerite",children:"https://github.com/NeriteOrg/nerite"})}),"\n",(0,i.jsx)(n.p,{children:"Contains the core contracts and libraries for the Nerite Protocol. Also includes the front end and everything you need to run your own instance of the app."}),"\n",(0,i.jsx)(n.p,{children:"The ReadMe also has more design and architecture information."}),"\n",(0,i.jsx)(n.h2,{id:"tech-spec-changes-on-nerite-from-liquity-v2",children:"Tech spec changes on Nerite from Liquity V2"}),"\n",(0,i.jsx)(n.h3,{id:"delegation",children:"Delegation"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"ActivePool.sol"})," now has ",(0,i.jsx)(n.code,{children:"delegateTokens"})," funtion. Any tokens can be delegated to the ",(0,i.jsx)(n.code,{children:"delegate"})," role. The role can be update by ",(0,i.jsx)(n.code,{children:"governance"}),", which is the DAO of NERI holders. Anyone can call delegate function safely since it always delegates to the ",(0,i.jsx)(n.code,{children:"delegate"})," role."]}),"\n",(0,i.jsx)(n.h3,{id:"superfluid",children:"Superfluid"}),"\n",(0,i.jsxs)(n.p,{children:["Bold token (which is renamed USDN), is now streamable via custom streaming token using this library: (",(0,i.jsx)(n.a,{href:"https://www.npmjs.com/package/@superfluid-finance/ethereum-contracts",children:"https://www.npmjs.com/package/@superfluid-finance/ethereum-contracts"}),")"]}),"\n",(0,i.jsxs)(n.p,{children:["_mint, _burn, _transfer functions have been replaced with selfMint, selfBurn, and selfTransfer from the ",(0,i.jsx)(n.a,{href:"https://github.com/superfluid-finance/protocol-monorepo/blob/dev/packages/ethereum-contracts/contracts/superfluid/SuperToken.sol",children:"superfluid supertoken"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"BoldToken is no longer an ERC-20 on its own, but rather a proxy which is initalized into an ERC-20. Many deployment changes as a result. Dev note: do not use deal() cheatcode with boldToken in testing, since the memory is not stored how foundry expects."}),"\n",(0,i.jsx)(n.p,{children:"ERC-20 imports on BoldToken are removed in favor of using UUPS proxy ERC-20 imported by superfluid. It uses the same openzeppelin ERC-20 implementation."}),"\n",(0,i.jsx)(n.p,{children:"Also remaps OZ in many places because of circular dependencies."}),"\n",(0,i.jsx)(n.h3,{id:"more-collaterals-and-debt-limits",children:"More collaterals and debt limits"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"BorrowOperations"})," handles minting new stablecoins. Debt can be minted in ",(0,i.jsx)(n.code,{children:"withdrawBold"}),", ",(0,i.jsx)(n.code,{children:"_openTrove"})," (which is used in the batch manager and elsewhere too, so be careful), and ",(0,i.jsx)(n.code,{children:"_moveTokensFromAdjustment"}),". Simple debt limit is just a uint256 stored in the ",(0,i.jsx)(n.code,{children:"TroveManager"})," of each branch, and accessable to the ",(0,i.jsx)(n.code,{children:"CollateralRegistry"})," via the index of the collateral. Getters and setters are added."]}),"\n",(0,i.jsx)(n.p,{children:"Does not handle the situation where interest accrued goes over the debt limit."}),"\n",(0,i.jsxs)(n.p,{children:["Debt limit can be raised by ",(0,i.jsx)(n.code,{children:"governance"})," by a max factor of 2 at a time, by calling the ",(0,i.jsx)(n.code,{children:"CollateralRegistry"})," which then calls the ",(0,i.jsx)(n.code,{children:"TroveManager"})," for that collateral branch."]}),"\n",(0,i.jsx)(n.p,{children:"Debt limit can be lowered to any amount at any time. (Still must use the timelock)"})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);